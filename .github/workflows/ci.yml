name: PlatformIO CI

on: [push]

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Cache PlatformIO
        uses: actions/cache@v4
        with:
          path: ~/.platformio
          key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
      - name: Set up Python
        uses: actions/setup-python@v5
      - name: Install PlatformIO
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade platformio
      - name: PIO Check
        run: pio check --fail-on-defect high --skip-packages

  test_native:
    runs-on: ubuntu-latest
    needs: check
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Cache PlatformIO
        uses: actions/cache@v4
        with:
          path: ~/.platformio
          key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
      - name: Set up Python
        uses: actions/setup-python@v5
      - name: Install PlatformIO
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade platformio
      - name: PIO Test
        run: pio test -e native

  build_native:
    runs-on: ubuntu-latest
    needs: [check, test_native]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Cache PlatformIO
        uses: actions/cache@v4
        with:
          path: ~/.platformio
          key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
      - name: Set up Python
        uses: actions/setup-python@v5
      - name: Install PlatformIO
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade platformio
      - name: PIO Build
        run: pio run -e native

  build_example01:
    runs-on: ubuntu-latest
    needs: [check, test_native]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Cache PlatformIO
        uses: actions/cache@v4
        with:
          path: ~/.platformio
          key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
      - name: Set up Python
        uses: actions/setup-python@v5
      - name: Install PlatformIO
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade platformio
      - name: PIO Build
        run: pio ci examples/example-01/example-01.ino --lib . --project-conf examples/platformio.ini
  
  build_example01_arduino:
    runs-on: ubuntu-latest
    needs: [check, test_native]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Setup Arduino CLI
        uses: arduino/setup-arduino-cli@v1
      - name: Configure Arduino CLI
        run: |
          mkdir ~/.arduino15
          echo "library:" > ~/.arduino15/arduino-cli.yaml
          echo "    enable_unsafe_install: true" >> ~/.arduino15/arduino-cli.yaml
      - name: Install platform
        run: |
          arduino-cli core update-index
          arduino-cli core install esp32:esp32
      - name: Install PPNet as a dependency
        run: |
          arduino-cli lib install --git-url "https://github.com/PagoPlus/ppnet.git#${GITHUB_SHA}"
          arduino-cli lib install MsgPack
      - name: Compile Sketch
        run: arduino-cli compile --fqbn esp32:esp32:esp32 ./examples/example-01/